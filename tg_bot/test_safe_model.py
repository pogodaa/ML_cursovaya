import pandas as pd
import joblib
import json
import numpy as np
from datetime import datetime

print("=== –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–ô –ú–û–î–ï–õ–ò ===\n")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å
model = joblib.load('models/safe_model_lightgbm.pkl')
with open('models/safe_feature_names.json', 'r') as f:
    safe_features = json.load(f)

print(f"‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(safe_features)} –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å–∞—Ö
test_cases = [
    (3, 0, 10, "–ù–æ—á—å –±—É–¥–Ω–∏–π"),
    (8, 0, 10, "–£—Ç—Ä–æ –±—É–¥–Ω–∏–π"), 
    (19, 0, 10, "–í–µ—á–µ—Ä –±—É–¥–Ω–∏–π"),
    (14, 5, 10, "–î–µ–Ω—å –≤—ã—Ö–æ–¥–Ω–æ–π")
]

print("üîç –¢–ï–°–¢ –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô:")
for hour, day, month, desc in test_cases:
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –ö–ê–ö –í –ë–û–¢–ï
    features = {}
    
    # –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ
    features['hour_sin'] = np.sin(2 * np.pi * hour / 24)
    features['hour_cos'] = np.cos(2 * np.pi * hour / 24)
    features['month_sin'] = np.sin(2 * np.pi * month / 12)
    features['month_cos'] = np.cos(2 * np.pi * month / 12)
    features['day_of_week_sin'] = np.sin(2 * np.pi * day / 7)
    features['day_of_week_cos'] = np.cos(2 * np.pi * day / 7)
    
    # –ë–∞–∑–æ–≤—ã–µ
    features['hour'] = hour
    features['day_of_week'] = day
    features['month'] = month
    features['is_weekend'] = 1 if day >= 5 else 0
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ EDA
    features['is_evening_peak'] = 1 if 18 <= hour <= 22 else 0
    features['is_morning_peak'] = 1 if 7 <= hour <= 9 else 0
    features['is_night'] = 1 if 0 <= hour <= 5 else 0
    features['is_midday'] = 1 if 10 <= hour <= 16 else 0
    features['is_early_morning'] = 1 if 4 <= hour <= 6 else 0
    features['is_late_evening'] = 1 if 21 <= hour <= 23 else 0
    features['is_deep_night'] = 1 if 1 <= hour <= 4 else 0
    
    features['is_monday'] = 1 if day == 0 else 0
    features['is_friday'] = 1 if day == 4 else 0
    features['is_sunday'] = 1 if day == 6 else 0
    features['is_week_start'] = 1 if day in [0, 1] else 0
    features['is_week_end'] = 1 if day in [4, 5] else 0
    
    features['weekend_evening_boost'] = 1 if (day >= 5 and 18 <= hour <= 22) else 0
    features['weekend_morning'] = 1 if (day >= 5 and 7 <= hour <= 9) else 0
    
    features['is_high_season'] = 1 if month in [12, 1, 2] else 0
    features['is_low_season'] = 1 if month in [6, 7, 8] else 0
    features['is_spring'] = 1 if month in [3, 4, 5] else 0
    
    features['morning_surge_6_7'] = 1 if 6 <= hour <= 7 else 0
    features['evening_surge_17_18'] = 1 if 17 <= hour <= 18 else 0
    features['evening_drop_22_23'] = 1 if 22 <= hour <= 23 else 0
    
    features['winter_evening'] = 1 if (month in [12, 1, 2] and 18 <= hour <= 22) else 0
    features['summer_afternoon'] = 1 if (month in [6, 7, 8] and 10 <= hour <= 16) else 0
    features['workday_evening'] = 1 if (day < 5 and 18 <= hour <= 22) else 0
    features['sunday_evening'] = 1 if (day == 6 and 18 <= hour <= 22) else 0
    
    # –°—É–±-—Å—á–µ—Ç—á–∏–∫–∏ (–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ)
    features['Sub_metering_1'] = 0.1 if (7 <= hour <= 9) or (18 <= hour <= 20) else 0.0
    features['Sub_metering_2'] = 0.05 if (10 <= hour <= 18) and (day >= 5) else 0.0
    features['Sub_metering_3'] = 0.2 if ((18 <= hour <= 22) and (month in [12, 1, 2])) or ((13 <= hour <= 17) and (month in [6, 7, 8])) else 0.0
    
    features['kitchen_active'] = 1 if features['Sub_metering_1'] > 0 else 0
    features['laundry_active'] = 1 if features['Sub_metering_2'] > 0 else 0
    features['ac_heating_active'] = 1 if features['Sub_metering_3'] > 0 else 0
    
    # –°–æ–∑–¥–∞–µ–º DataFrame –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    features_df = pd.DataFrame([features])[safe_features]
    
    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    prediction = model.predict(features_df)[0]
    
    print(f"  {desc}: {prediction:.3f} –∫–í—Ç - {'‚úÖ –†–ï–ê–õ–ò–°–¢–ò–ß–ù–û' if 0.5 <= prediction <= 2.5 else '‚ùå –ü–†–û–ë–õ–ï–ú–ê'}")

print(f"\nüéØ –û–ñ–ò–î–ê–ï–ú–´–ô –î–ò–ê–ü–ê–ó–û–ù: 0.5-2.5 –∫–í—Ç")
print(f"üìä –°—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å: 3.6-4.2 –∫–í—Ç ‚ùå")
print(f"üìà –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å: ~0.8-2.0 –∫–í—Ç ‚úÖ")